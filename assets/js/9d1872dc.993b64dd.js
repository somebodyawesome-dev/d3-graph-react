"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[663],{7819:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>h,contentTitle:()=>c,default:()=>x,frontMatter:()=>a,metadata:()=>p,toc:()=>m});var t=o(2540),r=o(3023),s=o(3696),d=o(5607);const l=()=>{const[e,n]=(0,s.useState)("bg-blue-500 text-white");return(0,t.jsx)("div",{className:"flex justify-center items-center min-h-screen p-6 pg-section",children:(0,t.jsxs)("div",{className:"flex flex-col md:flex-row border w-full bg-black rounded-xl",children:[(0,t.jsxs)("div",{id:"panel",className:"w-full md:w-1/2 flex flex-col border-r px-4 py-4",children:[(0,t.jsx)("h2",{children:"\ud83c\udfae Playground"}),(0,t.jsxs)("div",{className:"mb-4",children:[(0,t.jsx)("h3",{className:"text-lg font-semibold mb-2",children:"Node Color"}),(0,t.jsxs)("select",{onChange:e=>n(e.target.value),className:"input w-full input-bordered",children:[(0,t.jsx)("option",{value:"bg-blue-500 text-white",children:"Blue"}),(0,t.jsx)("option",{value:"bg-green-500 text-white",children:"green"}),(0,t.jsx)("option",{value:"bg-red-500 text-white",children:"red"})]})]})]}),(0,t.jsx)("div",{id:"nodes",className:"w-full h-[50dvh] md:h-[80dvh] flex",children:(0,t.jsx)(d.T,{containerId:"container-custom-id",graph:{nodes:[{id:1,label:"Node A"},{id:2,label:"Node B"},{id:3,label:"Node C"},{id:4,label:"Node D"}],links:[{source:0,target:1},{source:1,target:2},{source:2,target:3}]},NodeComponent:n=>{let{node:o}=n;return(0,t.jsx)("div",{className:`p-2 rounded border border-white ${e}`,children:o.label})},zoomScale:[.5,8],linkForce:{length:200,strength:1},chargeForce:{strength:-30},gravityForce:{center_x:200,center_y:200,strength:.05}})})]})})},i=()=>(0,t.jsx)("div",{className:"graph-page",children:(0,t.jsxs)("div",{className:"intro-wrapper",children:[(0,t.jsxs)("section",{className:"intro-section",children:[(0,t.jsx)("h1",{children:"\ud83d\udccd NodeComponent"}),(0,t.jsxs)("p",{children:[(0,t.jsx)("code",{children:"NodeComponent"})," Is an optional prop that allows customizing the display of nodes in the graph."]}),(0,t.jsx)("br",{}),(0,t.jsx)("h2",{children:"\ud83d\udccc Example Usage"}),(0,t.jsx)("pre",{children:(0,t.jsx)("code",{children:'const CustomNode = ({ node }) => (\n  <div className="custom-node">\n    <strong>{node.label}</strong>\n  </div>\n);\n\nconst graphData = {\n  nodes: [{ id: 1, label: "A" }, { id: 2, label: "B" }],\n  links: [{ source: 0, target: 1 }],\n};\n\nconst MyGraph = () => (\n  <Graph graph={graphData} NodeComponent={CustomNode} />\n);'})})]}),(0,t.jsx)(l,{})]})}),a={title:"NodeComponent",sidebar_label:"NodeComponent",hide_title:!0},c=void 0,p={id:"Props/NodeComponent",title:"NodeComponent",description:"",source:"@site/docs/Props/NodeComponent.mdx",sourceDirName:"Props",slug:"/Props/NodeComponent",permalink:"/d3-graph-react/docs/Props/NodeComponent",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"NodeComponent",sidebar_label:"NodeComponent",hide_title:!0},sidebar:"tutorialSidebar",previous:{title:"graph",permalink:"/d3-graph-react/docs/Props/graph"},next:{title:"LinkComponent",permalink:"/d3-graph-react/docs/Props/LinkComponent"}},h={},m=[];function u(e){return(0,t.jsx)(i,{})}function x(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u()}}}]);